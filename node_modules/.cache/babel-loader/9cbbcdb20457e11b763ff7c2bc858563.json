{"remainingRequest":"/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/node_modules/babel-loader/lib/index.js!/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/node_modules/cache-loader/dist/cjs.js??ref--0-0!/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/src/components/basicComponents/DemoC1FormElements.vue?vue&type=script&lang=js","dependencies":[{"path":"/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/src/components/basicComponents/DemoC1FormElements.vue","mtime":1613071631218},{"path":"/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IH0gZnJvbSAndnVlJzsKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnRGVtb0MxRm9ybUVsZW1lbnRzJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbXNnOiAndGVzdCB0ZXh0JywKICAgICAgYTogJ2RkJywKICAgICAgbWVzc2FnZTogJycsCiAgICAgIGNoZWNrZWROYW1lczogW10sCiAgICAgIHBpY2tlZDogJycsCiAgICAgIHNlbGVjdGVkOiAnJywKICAgICAgdG9nZ2xlOiBCb29sZWFuLAogICAgICBvcHRpb25zOiBbewogICAgICAgIHRleHQ6ICdPbmUnLAogICAgICAgIHZhbHVlOiAnQScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdUd28nLAogICAgICAgIHZhbHVlOiAnQicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdUaHJlZScsCiAgICAgICAgdmFsdWU6ICdDJwogICAgICB9XQogICAgfTsKICB9Cn0pOw=="},{"version":3,"sources":["/macdata/workspace/mySpace/newtechnic/myTestting/vscode/vue3/demo01_v3ts/src/components/basicComponents/DemoC1FormElements.vue"],"names":[],"mappings":"AAoIA,SAAS,eAAT,QAAgC,KAAhC;AACA,eAAe,eAAe,CAAC;AAC7B,EAAA,IAAI,EAAE,oBADuB;AAE7B,EAAA,IAF6B,kBAEtB;AACL,WAAO;AACL,MAAA,GAAG,EAAE,WADA;AAEL,MAAA,CAAC,EAAE,IAFE;AAGL,MAAA,OAAO,EAAE,EAHJ;AAIL,MAAA,YAAY,EAAE,EAJT;AAKL,MAAA,MAAM,EAAE,EALH;AAML,MAAA,QAAQ,EAAE,EANL;AAOL,MAAA,MAAM,EAAE,OAPH;AAQL,MAAA,OAAO,EAAE,CACP;AAAE,QAAA,IAAI,EAAE,KAAR;AAAe,QAAA,KAAK,EAAE;AAAtB,OADO,EAEP;AAAE,QAAA,IAAI,EAAE,KAAR;AAAe,QAAA,KAAK,EAAE;AAAtB,OAFO,EAGP;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,KAAK,EAAE;AAAxB,OAHO;AARJ,KAAP;AAcF;AAjB6B,CAAD,CAA9B","sourcesContent":["<!--declares a demo component, No. is DemoC1-1.\n\n-->\n<template>\n  <fieldset>\n    <legend align=\"left\">C1-1: bidirectional data binding V-MODE basic form elements</legend>\n    <span>\n      text:\n      <input v-model=\"message\" placeholder=\"edit me\" />\n      Message is: {{ message }}\n    </span>\n    <br />\n    <span>\n      textarea:\n      <textarea v-model=\"message\" placeholder=\"add multiple lines\"></textarea>\n      <p style=\"white-space: pre-line;\">{{ message }}</p>\n    </span>\n    <br />\n    <span>\n      Checkbox:\n      <input type=\"checkbox\" id=\"jack\" value=\"Jack\" v-model=\"checkedNames\" />\n      <label for=\"jack\">Jack</label>\n      <input type=\"checkbox\" id=\"john\" value=\"John\" v-model=\"checkedNames\" />\n      <label for=\"john\">John</label>\n      <input type=\"checkbox\" id=\"mike\" value=\"Mike\" v-model=\"checkedNames\" />\n      <label for=\"mike\">Mike</label>,\n      <span>Checked names: {{ checkedNames }}</span>\n    </span>\n    <br />\n    <span>\n      Radio:\n      <input type=\"radio\" id=\"one\" value=\"One\" v-model=\"picked\" />\n      <label for=\"one\">One</label>\n      <input type=\"radio\" id=\"two\" value=\"Two\" v-model=\"picked\" />\n      <label for=\"two\">Two</label>,\n      <span>Picked: {{ picked }}</span>\n    </span>\n    <br />\n    <span>\n      select(single):\n      <select v-model=\"selected\">\n        <option disabled value>Please select one</option>\n        <option>A</option>\n        <option>B</option>\n        <option>C</option> </select\n      >,\n      <span>Selected: {{ selected }}</span>\n    </span>\n    <br />\n    <span>\n      select(multiple):\n      <select v-model=\"selected\" multiple>\n        <option>A</option>\n        <option>B</option>\n        <option>C</option> </select\n      >,\n      <span>Selected: {{ selected }}</span>\n    </span>\n    <br />\n    <span>\n      select(v-for):\n      <select v-model=\"selected\">\n        <option v-for=\"(option, index) in options\" :value=\"option.value\" :key=\"index\">{{ option.text }}</option>\n      </select>\n      <span>Selected: {{ selected }}</span>\n    </span>\n  </fieldset>\n  <fieldset>\n    <legend align=\"left\">C1-2: bidirectional data binding V-MODE value binding</legend>\n    <span>\n      single select:\n      <!-- 当选中时，`picked` 为字符串 \"a\" -->\n      <input type=\"radio\" v-model=\"picked\" value=\"a\" />\n      <!-- 当选中时，picked 为 data.a变量的值\"dd\"-->\n      <input type=\"radio\" v-model=\"picked\" v-bind:value=\"a\" />\n      {{ picked }}\n      <!-- `toggle` 为 true 或 false -->\n      <input type=\"checkbox\" v-model=\"toggle\" />\n      {{ toggle }}\n      <!-- 当选中第一个选项时，`selected` 为字符串 \"abc\" -->\n      <select v-model=\"selected\">\n        <option value=\"abc\">ABC</option>\n        <option value=\"def\">DEF</option>\n      </select>\n      {{ selected }}\n    </span>\n    <br />\n    <span>\n      MULTIPLE select:\n      <input type=\"checkbox\" v-model=\"toggle\" true-value=\"yesno\" false-value=\"noyes\" />\n      {{ toggle }}\n    </span>\n    <br />\n    <span>\n      Select option INLINE object:\n      <select v-model=\"selected\">\n        <!-- 内联对象字面量 -->\n        <!-- 当被选中时\n            typeof vm.selected＝'object'\n          vm.selected.number＝123-->\n        <option :value=\"{ number: 123 }\">123</option>\n        <option :value=\"{ number: 456 }\">456</option>\n      </select>\n      {{ selected }}\n    </span>\n  </fieldset>\n  <fieldset>\n    <legend align=\"left\">C1-3: form elelemts modifiers</legend>\n    <span>\n      .lazy:\n      <!-- synced after \"change\" instead of \"input\" -->\n      <input v-model.lazy=\"msg\" />\n      <br />.lazy: no lazy\n      <!-- synced after \"input\" immediately -->\n      <input v-model=\"msg\" />\n      {{ msg }}\n      <br />.number:\n      <input\n        v-model.number=\"msg\"\n        title=\"If you want user input to be automatically typecast as a number, you can add the number modifier to your v-model managed inputs:\"\n      />\n      <br />.number: no number\n      <input v-model=\"msg\" />\n      {{ msg }},{{ typeof msg }} <br />.trim:\n      <input v-model.trim=\"msg\" />\n      {{ msg }}\n    </span>\n    <br />\n  </fieldset>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n  name: 'DemoC1FormElements',\n  data() {\n    return {\n      msg: 'test text',\n      a: 'dd',\n      message: '',\n      checkedNames: [],\n      picked: '',\n      selected: '',\n      toggle: Boolean,\n      options: [\n        { text: 'One', value: 'A' },\n        { text: 'Two', value: 'B' },\n        { text: 'Three', value: 'C' }\n      ]\n    }\n  }\n})\n</script>\n//\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na,\nspan {\n  color: red;\n}\n</style>\n"],"sourceRoot":""}]}